// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orchestrator.Persistance.Models;

#nullable disable

namespace Orchestrator.Application.WebApi.Migrations
{
    [DbContext(typeof(OrchestratorContext))]
    [Migration("20220819122353_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Orchestrator.Core.Models.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ExecutionCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FlowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parameters")
                        .HasColumnType("TEXT");

                    b.Property<short>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TenantId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TenantÍd")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("EventEntity");
                });

            modelBuilder.Entity("Orchestrator.Core.Models.Flow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flow");
                });

            modelBuilder.Entity("Orchestrator.Core.Models.ParameterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParameterType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TenantId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TenantÍd")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ParameterEntity");
                });

            modelBuilder.Entity("Orchestrator.Core.Models.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefaultTenant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicId")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Orchestrator.Core.Models.EventEntity", b =>
                {
                    b.HasOne("Orchestrator.Core.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Orchestrator.Core.Models.ParameterEntity", b =>
                {
                    b.HasOne("Orchestrator.Core.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
